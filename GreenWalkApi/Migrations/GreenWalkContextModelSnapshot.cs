// <auto-generated />
using System;
using GreenWalkApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GreenWalkApi.Migrations
{
    [DbContext(typeof(GreenWalkContext))]
    partial class GreenWalkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GreenWalkApi.Models.Bin", b =>
                {
                    b.Property<int>("BinID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PositionID");

                    b.Property<int>("UserID");

                    b.HasKey("BinID");

                    b.HasIndex("PositionID");

                    b.HasIndex("UserID");

                    b.ToTable("Bins");
                });

            modelBuilder.Entity("GreenWalkApi.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Descritpion");

                    b.Property<string>("Name");

                    b.Property<int>("PositionID");

                    b.Property<int>("UserID");

                    b.HasKey("EventID");

                    b.HasIndex("PositionID");

                    b.HasIndex("UserID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("GreenWalkApi.Models.Journey", b =>
                {
                    b.Property<int>("JourneyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<byte[]>("Picture");

                    b.Property<int?>("UserID");

                    b.HasKey("JourneyID");

                    b.HasIndex("UserID");

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("GreenWalkApi.Models.Position", b =>
                {
                    b.Property<int>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("JourneyID");

                    b.Property<int>("X");

                    b.Property<int>("Y");

                    b.HasKey("PositionID");

                    b.HasIndex("JourneyID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("GreenWalkApi.Models.Success", b =>
                {
                    b.Property<int>("SuccessID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Logo");

                    b.Property<string>("Name");

                    b.Property<int?>("UserID");

                    b.HasKey("SuccessID");

                    b.HasIndex("UserID");

                    b.ToTable("Successes");
                });

            modelBuilder.Entity("GreenWalkApi.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Avatar");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MailAdress");

                    b.Property<string>("Password");

                    b.Property<string>("Pseudo");

                    b.Property<int?>("SuccessID");

                    b.HasKey("UserID");

                    b.HasIndex("SuccessID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GreenWalkApi.Models.Bin", b =>
                {
                    b.HasOne("GreenWalkApi.Models.Position", "Position")
                        .WithMany("Bins")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenWalkApi.Models.User", "UserCreation")
                        .WithMany("Bins")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenWalkApi.Models.Event", b =>
                {
                    b.HasOne("GreenWalkApi.Models.Position", "PositionStart")
                        .WithMany("Events")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenWalkApi.Models.User", "UserPlanner")
                        .WithMany("Events")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenWalkApi.Models.Journey", b =>
                {
                    b.HasOne("GreenWalkApi.Models.User", "User")
                        .WithMany("Journeys")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("GreenWalkApi.Models.Position", b =>
                {
                    b.HasOne("GreenWalkApi.Models.Journey", "Journey")
                        .WithMany("Positions")
                        .HasForeignKey("JourneyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenWalkApi.Models.Success", b =>
                {
                    b.HasOne("GreenWalkApi.Models.User")
                        .WithMany("Successes")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("GreenWalkApi.Models.User", b =>
                {
                    b.HasOne("GreenWalkApi.Models.Success")
                        .WithMany("Users")
                        .HasForeignKey("SuccessID");
                });
#pragma warning restore 612, 618
        }
    }
}
